definitions:
  domain.Cart:
    properties:
      created_at:
        type: string
      id:
        type: integer
      items:
        items:
          $ref: '#/definitions/domain.CartItem'
        type: array
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  domain.CartItem:
    properties:
      cart_id:
        type: integer
      created_at:
        type: string
      id:
        type: integer
      product:
        $ref: '#/definitions/domain.Product'
      product_id:
        type: integer
      quantity:
        type: integer
      updated_at:
        type: string
    type: object
  domain.Order:
    properties:
      created_at:
        type: string
      id:
        type: integer
      items:
        items:
          $ref: '#/definitions/domain.OrderItem'
        type: array
      status:
        type: string
      total:
        type: number
      updated_at:
        type: string
      user_id:
        type: integer
    type: object
  domain.OrderItem:
    properties:
      created_at:
        type: string
      id:
        type: integer
      order_id:
        type: integer
      price:
        type: number
      product:
        $ref: '#/definitions/domain.Product'
      product_id:
        type: integer
      quantity:
        type: integer
      updated_at:
        type: string
    type: object
  domain.Product:
    properties:
      created_at:
        type: string
      description:
        type: string
      id:
        type: integer
      name:
        type: string
      price:
        type: number
      updated_at:
        type: string
    type: object
info:
  contact: {}
  description: REST API для управления корзиной товаров в интернет-магазине
  title: Shopping Cart API
  version: "1.0"
paths:
  /cart:
    get:
      consumes:
      - application/json
      description: Возвращает содержимое корзины пользователя
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Cart'
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Получить корзину пользователя
      tags:
      - cart
  /cart/items:
    post:
      consumes:
      - application/json
      description: Добавляет указанный товар в корзину пользователя
      parameters:
      - description: Товар для добавления
        in: body
        name: item
        required: true
        schema:
          $ref: '#/definitions/domain.CartItem'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Cart'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Добавить товар в корзину
      tags:
      - cart
  /cart/items/{item_id}:
    delete:
      consumes:
      - application/json
      description: Удаляет указанный товар из корзины пользователя
      parameters:
      - description: ID товара
        in: path
        name: item_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Cart'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Удалить товар из корзины
      tags:
      - cart
  /orders:
    post:
      consumes:
      - application/json
      description: Создает новый заказ на основе содержимого корзины
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Order'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Создать заказ
      tags:
      - order
  /orders/{id}:
    get:
      consumes:
      - application/json
      description: Возвращает информацию о заказе по его ID
      parameters:
      - description: ID заказа
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Order'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Получить заказ
      tags:
      - order
  /products:
    post:
      consumes:
      - application/json
      description: Создает новый товар в магазине
      parameters:
      - description: Товар для создания
        in: body
        name: product
        required: true
        schema:
          $ref: '#/definitions/domain.Product'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/domain.Product'
        "400":
          description: Bad Request
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Создать товар
      tags:
      - product
  /products/{id}:
    get:
      consumes:
      - application/json
      description: Возвращает информацию о товаре по его ID
      parameters:
      - description: ID товара
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/domain.Product'
        "404":
          description: Not Found
          schema:
            additionalProperties:
              type: string
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties:
              type: string
            type: object
      summary: Получить товар
      tags:
      - product
swagger: "2.0"
